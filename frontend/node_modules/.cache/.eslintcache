[{"D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\index.tsx":"1","D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\reportWebVitals.ts":"2","D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\store\\index.ts":"3","D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\routes\\index.tsx":"4","D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\screens\\Login\\index.tsx":"5","D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\screens\\Books\\index.tsx":"6","D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\screens\\BookDetails\\index.tsx":"7","D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\reducer\\index.ts":"8","D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\components\\Navbar\\index.tsx":"9","D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\apiClient\\index.ts":"10","D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\components\\Button\\index.tsx":"11","D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\screens\\Book\\index.tsx":"12","D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\components\\PaginationBooks\\index.tsx":"13","D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\components\\Loading\\index.tsx":"14"},{"size":1298,"mtime":1702433095884,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1695139997379,"results":"17","hashOfConfig":"16"},{"size":286,"mtime":1703344413039,"results":"18","hashOfConfig":"16"},{"size":918,"mtime":1699719747534,"results":"19","hashOfConfig":"16"},{"size":4736,"mtime":1702340648922,"results":"20","hashOfConfig":"16"},{"size":4471,"mtime":1703344728075,"results":"21","hashOfConfig":"16"},{"size":2533,"mtime":1699854707759,"results":"22","hashOfConfig":"16"},{"size":361,"mtime":1703344831294,"results":"23","hashOfConfig":"16"},{"size":1534,"mtime":1699720431190,"results":"24","hashOfConfig":"16"},{"size":556,"mtime":1703344266548,"results":"25","hashOfConfig":"16"},{"size":557,"mtime":1702057743990,"results":"26","hashOfConfig":"16"},{"size":2141,"mtime":1701968580461,"results":"27","hashOfConfig":"16"},{"size":4230,"mtime":1702054435238,"results":"28","hashOfConfig":"16"},{"size":478,"mtime":1699722078042,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ago64n",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\index.tsx",[],[],"D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\reportWebVitals.ts",[],[],"D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\store\\index.ts",[],[],"D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\routes\\index.tsx",[],[],"D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\screens\\Login\\index.tsx",["78","79"],[],"import React, { useState, useMemo } from 'react';\r\nimport { Button } from '../../components/Button';\r\n\r\nexport const Login = () => {\r\n    const [emailValue, setEmailValue] = useState<string>('');\r\n    const [passwordValue, setPasswordValue] = useState<string>('');\r\n    const [showPassword, setShowPassword] = useState<boolean>(false);\r\n\r\n    const emailHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        //React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n        setEmailValue(event.target.value);\r\n    };\r\n\r\n    const passwordHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPasswordValue(event.target.value);\r\n    };\r\n\r\n    const saveDataInput = () => {\r\n        let inputValue = {\r\n            email: emailValue,\r\n            password: passwordValue,\r\n        };\r\n        console.log(inputValue);\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex items-center justify-center\">\r\n            <div className=\"flex flex-col justify-center items-start rounded-2xl border-2 border-neutral-300 w-2/5 max-w-3xl min-w-min my-40 p-10 shadow-xl\">\r\n                {/*w-2/5  */}\r\n                {/*max-2xl:flex-col */}\r\n                <div className=\"flex justify-center w-full\">\r\n                    <p className=\" text-3xl font-bold p-2\">Sign In</p>\r\n                </div>\r\n\r\n                <label className=\"font-bold my-2 ml-2\">Email adress</label>\r\n                <input\r\n                    placeholder=\"Enter email\"\r\n                    className=\"rounded-xl border-2 border-neutral-300 p-2 mb-4 ml- w-full\"\r\n                    onChange={emailHandler}\r\n                ></input>\r\n                <label className=\"font-bold mb-2 ml-2\">Password</label>\r\n                <input\r\n                    placeholder=\"Password\"\r\n                    className=\"rounded-xl  border-2 border-neutral-300 p-2 w-full mb-4 ml-1\"\r\n                    onChange={passwordHandler}\r\n                    type={showPassword ? 'text' : 'password'}\r\n                ></input>\r\n\r\n                <div\r\n                    className=\"flex  flex-row-reverse w-full -mt-4 \"\r\n                    onClick={() => setShowPassword((state) => !state)}\r\n                >\r\n                    {showPassword ? (\r\n                        <p className=\"flex items-center text-xs \">\r\n                            Hide password{' '}\r\n                            <svg\r\n                                className=\"ml-2 w-6 h-6 text-gray-800 dark:text-white\"\r\n                                aria-hidden=\"true\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                fill=\"currentColor\"\r\n                                viewBox=\"0 0 20 14\"\r\n                            >\r\n                                <path d=\"M10 0C4.612 0 0 5.336 0 7c0 1.742 3.546 7 10 7 6.454 0 10-5.258 10-7 0-1.664-4.612-7-10-7Zm0 10a3 3 0 1 1 0-6 3 3 0 0 1 0 6Z\" />\r\n                            </svg>\r\n                        </p>\r\n                    ) : (\r\n                        <p className=\"flex items-center text-xs\">\r\n                            Show password{' '}\r\n                            <svg\r\n                                className=\"ml-2 w-6 h-6 text-gray-800 dark:text-white\"\r\n                                aria-hidden=\"true\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                fill=\"none\"\r\n                                viewBox=\"0 0 20 14\"\r\n                            >\r\n                                <g\r\n                                    stroke=\"currentColor\"\r\n                                    stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\"\r\n                                    stroke-width=\"2\"\r\n                                >\r\n                                    <path d=\"M10 10a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z\" />\r\n                                    <path d=\"M10 13c4.97 0 9-2.686 9-6s-4.03-6-9-6-9 2.686-9 6 4.03 6 9 6Z\" />\r\n                                </g>\r\n                            </svg>\r\n                        </p>\r\n                    )}\r\n                </div>\r\n\r\n                <Button\r\n                    content={'Submit'}\r\n                    background=\"bg-indigo-600\"\r\n                    onClick={saveDataInput}\r\n                    width=\"w-full\"\r\n                />\r\n\r\n                <p className=\"ml-2 mt-2\">\r\n                    Forgot{' '}\r\n                    <a\r\n                        className=\"text-blue-500 underline \"\r\n                        href=\"#\"\r\n                        target=\"_blank\"\r\n                    >\r\n                        password?\r\n                    </a>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\screens\\Books\\index.tsx",["80","81","82","83","84","85","86","87"],[],"import React, { useState, useEffect } from 'react';\r\nimport { StoreType, book, storeType } from '../../types';\r\nimport { Hyperlink } from '../../components/Hyperlink';\r\nimport { Button } from '../../components/Button';\r\nimport { getAllBooks } from '../../apiClient';\r\nimport { WolnelekturyAPIType } from '../../types';\r\nimport { Book } from '../Book';\r\nimport { PaginationBooks } from '../../components/PaginationBooks';\r\nimport { BookDetails } from '../BookDetails';\r\nimport { Navbar } from '../../components/Navbar';\r\nimport { Loading } from '../../components/Loading';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setBooks } from '../../reducer';\r\nimport { getBooksApi } from '../../apiClient';\r\n\r\ninterface props {\r\n    //books: WolnelekturyAPIType;\r\n    book: WolnelekturyAPIType;\r\n    //bookHandler: () => WolnelekturyAPIType;\r\n}\r\n\r\n// const bookIntro = (longText: string): string =>\r\n//     longText.slice(0, 50).trim() + '...';\r\n\r\nexport const Books = () => {\r\n    const dispatch = useDispatch();\r\n    const booksState = useSelector(\r\n        (state: StoreType) => state.booksReducer.books\r\n    );\r\n    //console.log(booksState);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    //const [books, setBooks] = useState<WolnelekturyAPIType[]>([]);\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [booksPerPage, setBooksPerPage] = useState(6);\r\n\r\n    const lastBooksIndex = currentPage * booksPerPage;\r\n    const firstBooksIndex = lastBooksIndex - booksPerPage;\r\n    const currentBooks = booksState.slice(firstBooksIndex, lastBooksIndex);\r\n\r\n    // const deleteBookHandler = (id: number) => {\r\n    //     console.log(books);\r\n    //     console.log('delete book ' + id);\r\n    //     //setBookValue([...bookValue].splice(item.id, 1))\r\n    //     //setBookValue(bookValue.filter((item: {}) => item.id !== id)); //filter((item: {}) => item.id !== id)\r\n    //     //setBookValue(bookValue.filter((item: {}) => item.id !== id));\r\n    // };\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const result = await getAllBooks();\r\n                //setBooks(result);\r\n                dispatch(setBooks(result));\r\n                setIsLoading(false);\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const result = await getBooksApi();\r\n                //console.log(result);\r\n                dispatch(setBooks(result.books));\r\n                setIsLoading(false);\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    // function getBooksApi() {\r\n    //     return new Promise((resolve, reject) => {\r\n    //\r\n    //             //resolve(\" dane\");\r\n    //             reject(\" błąd\");\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    // getContent()\r\n    //     .then(result => {\r\n    //         const result = await getAllBooks();\r\n\r\n    //         dispatch(setBooks(result));\r\n    //         setIsLoading(false);\r\n    //     })\r\n    //     .catch(error => {\r\n    //         console.error(error);\r\n    //     });\r\n\r\n    return (\r\n        <div className=\"w-full h-full\">\r\n            <Navbar content=\"A list of books\" />\r\n            {isLoading ? (\r\n                <Loading />\r\n            ) : (\r\n                <div className=\"bg-slate-100 py-10 flex justify-center\">\r\n                    <div className=\"absolute flex justify-center\">\r\n                        <p className=\"py-8 text-4xl text-slate-400 flex justify-center font-bold\">\r\n                            A list of books\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"grid gap-10 grid-cols-3 grid-rows-3 my-28 w-3/4\">\r\n                        {currentBooks.map((book, index) => (\r\n                            <Book book={book} key={index} />\r\n                        ))}\r\n\r\n                        <PaginationBooks\r\n                            totalBooks={booksState.length}\r\n                            booksPerPage={booksPerPage}\r\n                            setBooksPerPage={setBooksPerPage}\r\n                            currentPage={currentPage}\r\n                            setCurrentPage={setCurrentPage}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n","D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\screens\\BookDetails\\index.tsx",["88","89","90","91","92","93","94","95","96"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useNavigation, useParams } from 'react-router-dom';\r\nimport { BookApiType, book } from '../../types';\r\nimport { Button } from '../../components/Button';\r\nimport { WolnelekturyAPIType } from '../../types';\r\nimport { getBook } from '../../apiClient';\r\nimport { Navbar } from '../../components/Navbar';\r\n\r\ninterface props {\r\n    book: BookApiType;\r\n    content: string;\r\n}\r\n\r\nconst bookPagination = (content: string) => {\r\n    const step = 200;\r\n    const output: string[] = [];\r\n\r\n    for (let i = 0; i < content.length; i += step) {\r\n        output.push(content.slice(i, i + step));\r\n    }\r\n\r\n    return output;\r\n};\r\n\r\nexport const BookDetails = () => {\r\n    const { authorTitle } = useParams();\r\n    const [book, setBook] = useState<BookApiType>();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const result = authorTitle && (await getBook(authorTitle));\r\n                setBook(result);\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    console.log(authorTitle, book);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar content=\"Book Details\" arrow />\r\n            <div className=\"flex justify-center items-center bg-slate-200 py-20\">\r\n                <div className=\"flex-row items-center ml-32\">\r\n                    <img\r\n                        src={book?.simple_thumb}\r\n                        className=\"border-8 border-solid border-gray-400 \"\r\n                    />\r\n\r\n                    <div className=\"flex justify-between items-center\">\r\n                        <div>\r\n                            <p className=\" text-2xl my-10\">\r\n                                Title: {book?.title}\r\n                            </p>\r\n                            <p className=\"text-2xl my-10\">\r\n                                Author: {book?.authors[0].name}\r\n                            </p>\r\n                            <p className=\"text-2xl\">\r\n                                Language: {book?.language}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <p className=\"px-20 flex justify-center\">{pages[pageNumber]}</p> */}\r\n                {/* <p className=\"flex justify-center my-40 font-bold\">{book?.cover}</p>\r\n            <a href={book?.fb2}>fabula</a> */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\reducer\\index.ts",[],[],"D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\components\\Navbar\\index.tsx",["97"],[],"import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\ninterface props {\r\n    content: string;\r\n    arrow?: boolean;\r\n}\r\n\r\nexport const Navbar = ({ content, arrow }: props) => {\r\n    const navigate = useNavigate();\r\n    const handleClickBack = () => navigate(-1);\r\n    const handleClickFofward = () => navigate(1);\r\n\r\n    return (\r\n        <div className=\"flex justify-center items-center static bg-orange-400 py-6 text-2xl \">\r\n            {arrow && (\r\n                <div className=\"flex items-center\">\r\n                    <div\r\n                        className=\"absolute  left-20 rounded \"\r\n                        onClick={handleClickBack}\r\n                    >\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"36\"\r\n                            height=\"36\"\r\n                            fill=\"currentColor\"\r\n                            className=\"rounded-lg bi bi-chevron-left bg-green-500 hover:bg-indigo-600 \"\r\n                            viewBox=\"0 0 16 16\"\r\n                        >\r\n                            <path\r\n                                fill-rule=\"evenodd\"\r\n                                d=\"M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\"\r\n                            />\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            <p>{content}</p>\r\n        </div>\r\n    );\r\n};\r\n","D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\apiClient\\index.ts",[],[],"D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\components\\Button\\index.tsx",[],[],"D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\screens\\Book\\index.tsx",["98","99"],[],"import { useNavigate, useNavigation } from 'react-router-dom';\r\nimport { WolnelekturyAPIType } from '../../types';\r\n\r\ninterface props {\r\n    book: WolnelekturyAPIType;\r\n}\r\n\r\nexport const Book = ({ book }: props) => {\r\n    const navigate = useNavigate();\r\n    console.log(`/book/${book.slug}`);\r\n\r\n    return (\r\n        <div\r\n            className=\"flex flex-col items-stretch drop-shadow-lg hover:drop-shadow-2xl\"\r\n            onClick={() => navigate(`/book/${book.slug}`)}\r\n        >\r\n            <img\r\n                src={book.simple_thumb}\r\n                className=\"border-8 border-solid border-gray-400\"\r\n            />\r\n\r\n            <div className=\"flex justify-between max-lg:flex-col bg-red-400 \">\r\n                <div className=\" break-words p-6\">\r\n                    <p className=\"text-2xl w-full\">\r\n                        {' '}\r\n                        {/*is problem  */}\r\n                        {book.title}\r\n                    </p>\r\n                    <p className=\"text-2xl\">{book.author}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex items-center justify-center bg-lime-300 max-h-full absolute bottom-0 w-full \">\r\n                <svg\r\n                    className=\"w-6 h-6 text-gray-800 dark:text-white\"\r\n                    aria-hidden=\"true\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 21 20\"\r\n                >\r\n                    <path\r\n                        stroke=\"currentColor\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"m11.479 1.712 2.367 4.8a.532.532 0 0 0 .4.292l5.294.769a.534.534 0 0 1 .3.91l-3.83 3.735a.534.534 0 0 0-.154.473l.9 5.272a.535.535 0 0 1-.775.563l-4.734-2.49a.536.536 0 0 0-.5 0l-4.73 2.487a.534.534 0 0 1-.775-.563l.9-5.272a.534.534 0 0 0-.154-.473L2.158 8.48a.534.534 0 0 1 .3-.911l5.294-.77a.532.532 0 0 0 .4-.292l2.367-4.8a.534.534 0 0 1 .96.004Z\"\r\n                    />\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\components\\PaginationBooks\\index.tsx",["100","101","102","103","104","105","106"],[],"import React, { useState, useMemo } from 'react';\r\nimport { Button } from '../Button';\r\n\r\ninterface props {\r\n    totalBooks: number;\r\n    booksPerPage: number;\r\n    currentPage: number;\r\n    setBooksPerPage: (state: number) => void;\r\n    setCurrentPage: (state: number) => void;\r\n}\r\n\r\nexport const PaginationBooks = ({\r\n    totalBooks,\r\n    booksPerPage,\r\n    currentPage,\r\n    setBooksPerPage,\r\n    setCurrentPage,\r\n}: props) => {\r\n    const [pageNumberLimit, setPageNumberLimit] = useState(2);\r\n    const [maxPageNumberLimit, setMaxPageNumberLimit] = useState(5);\r\n    const [minPageNumberLimit, setMinPageNumberLimit] = useState(0);\r\n    //\r\n    let pages = [];\r\n    let envNumber = process.env.REACT_APP_PAGE_COUNT\r\n        ? parseInt(process.env.REACT_APP_PAGE_COUNT)\r\n        : 0;\r\n\r\n    let envNumberChanged = [\r\n        ...Array.from({ length: envNumber + 1 }, (_, i) => i),\r\n    ];\r\n    console.log(envNumberChanged);\r\n\r\n    for (\r\n        let i = 1;\r\n        i <= Math.ceil(totalBooks / booksPerPage);\r\n        // && i < envNumberChanged.length;\r\n        i++\r\n    ) {\r\n        pages.push(i);\r\n    }\r\n    console.log(...Array.from({ length: envNumber + 1 }, (_, i) => i));\r\n\r\n    let background;\r\n\r\n    const PrevPageHandler = () => {\r\n        setCurrentPage(currentPage - 1);\r\n        if ((currentPage - 1) % pageNumberLimit == 0) {\r\n            setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n            setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n        }\r\n    };\r\n\r\n    const NextPageHandler = () => {\r\n        setCurrentPage(currentPage + 1);\r\n        if (currentPage + 1 > maxPageNumberLimit) {\r\n            setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n            setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n        }\r\n    };\r\n\r\n    const LoadMoreHandler = () => {\r\n        setBooksPerPage(booksPerPage + 10);\r\n    };\r\n\r\n    const generateArray = useMemo(\r\n        () => (index: number) => {\r\n            let array = [index - 2, index - 1, index, index + 1, index + 2];\r\n            return array.filter((item) => item > -1 && item <= envNumber);\r\n        },\r\n        []\r\n    );\r\n\r\n    return (\r\n        <div className=\" col-span-3  bg-slate-500  h-2/4 p-2\">\r\n            <div className=\"flex flex-wrap justify-center items-center  col-span-3 p-2\">\r\n                <button\r\n                    className=\"text-white rounded-xl p-1 m-1 border-white border-4 decoration-white text-2xl  hover:bg-lime-500\"\r\n                    onClick={PrevPageHandler}\r\n                    disabled={currentPage == pages[0] ? true : false}\r\n                >\r\n                    Prev\r\n                </button>\r\n\r\n                {generateArray(currentPage).map((page, index) => (\r\n                    <Button\r\n                        key={index}\r\n                        content={page}\r\n                        background={\r\n                            currentPage == page\r\n                                ? `bg-lime-500`\r\n                                : `bg-indigo-600`\r\n                        }\r\n                        onClick={() => setCurrentPage(page)}\r\n                        width={''}\r\n                    />\r\n                ))}\r\n\r\n                <button\r\n                    className=\"text-white rounded-xl p-1 m-1 border-white border-4 decoration-white text-2xl  hover:bg-lime-500\"\r\n                    //onClick={NextPageHandler}\r\n                >\r\n                    {pages.length}\r\n                </button>\r\n\r\n                <button\r\n                    className=\"text-white rounded-xl p-1 m-1 border-white border-4 decoration-white text-2xl  hover:bg-lime-500\"\r\n                    onClick={NextPageHandler}\r\n                    disabled={\r\n                        currentPage == pages[pages.length - 1] ? true : false\r\n                    }\r\n                >\r\n                    Next\r\n                </button>\r\n            </div>\r\n\r\n            <button\r\n                className=\" text-white rounded-xl p-1 m-1 border-white border-4 decoration-white text-2xl  hover:bg-lime-500  bg-slate-800\"\r\n                onClick={LoadMoreHandler}\r\n            >\r\n                Load More\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n","D:\\Documents\\GitHub\\BookServiseTS\\frontend\\src\\components\\Loading\\index.tsx",[],[],{"ruleId":"107","severity":1,"message":"108","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":34},{"ruleId":"111","severity":1,"message":"112","line":99,"column":21,"nodeType":"113","endLine":103,"endColumn":22},{"ruleId":"107","severity":1,"message":"114","line":2,"column":21,"nodeType":"109","messageId":"110","endLine":2,"endColumn":25},{"ruleId":"107","severity":1,"message":"115","line":2,"column":27,"nodeType":"109","messageId":"110","endLine":2,"endColumn":36},{"ruleId":"107","severity":1,"message":"116","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":19},{"ruleId":"107","severity":1,"message":"117","line":4,"column":10,"nodeType":"109","messageId":"110","endLine":4,"endColumn":16},{"ruleId":"107","severity":1,"message":"118","line":9,"column":10,"nodeType":"109","messageId":"110","endLine":9,"endColumn":21},{"ruleId":"107","severity":1,"message":"119","line":16,"column":11,"nodeType":"109","messageId":"110","endLine":16,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":61,"column":8,"nodeType":"122","endLine":61,"endColumn":10,"suggestions":"123"},{"ruleId":"120","severity":1,"message":"121","line":74,"column":8,"nodeType":"122","endLine":74,"endColumn":10,"suggestions":"124"},{"ruleId":"107","severity":1,"message":"125","line":2,"column":23,"nodeType":"109","messageId":"110","endLine":2,"endColumn":36},{"ruleId":"107","severity":1,"message":"114","line":3,"column":23,"nodeType":"109","messageId":"110","endLine":3,"endColumn":27},{"ruleId":"107","severity":1,"message":"117","line":4,"column":10,"nodeType":"109","messageId":"110","endLine":4,"endColumn":16},{"ruleId":"107","severity":1,"message":"126","line":5,"column":10,"nodeType":"109","messageId":"110","endLine":5,"endColumn":29},{"ruleId":"107","severity":1,"message":"119","line":9,"column":11,"nodeType":"109","messageId":"110","endLine":9,"endColumn":16},{"ruleId":"107","severity":1,"message":"127","line":14,"column":7,"nodeType":"109","messageId":"110","endLine":14,"endColumn":21},{"ruleId":"107","severity":1,"message":"128","line":28,"column":11,"nodeType":"109","messageId":"110","endLine":28,"endColumn":19},{"ruleId":"120","severity":1,"message":"129","line":39,"column":8,"nodeType":"122","endLine":39,"endColumn":10,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":48,"column":21,"nodeType":"113","endLine":51,"endColumn":23},{"ruleId":"107","severity":1,"message":"133","line":12,"column":11,"nodeType":"109","messageId":"110","endLine":12,"endColumn":29},{"ruleId":"107","severity":1,"message":"125","line":1,"column":23,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"131","severity":1,"message":"132","line":17,"column":13,"nodeType":"113","endLine":20,"endColumn":15},{"ruleId":"107","severity":1,"message":"134","line":19,"column":29,"nodeType":"109","messageId":"110","endLine":19,"endColumn":47},{"ruleId":"107","severity":1,"message":"135","line":43,"column":9,"nodeType":"109","messageId":"110","endLine":43,"endColumn":19},{"ruleId":"136","severity":1,"message":"137","line":47,"column":49,"nodeType":"138","messageId":"139","endLine":47,"endColumn":51},{"ruleId":"120","severity":1,"message":"140","line":70,"column":9,"nodeType":"122","endLine":70,"endColumn":11,"suggestions":"141"},{"ruleId":"136","severity":1,"message":"137","line":79,"column":43,"nodeType":"138","messageId":"139","endLine":79,"endColumn":45},{"ruleId":"136","severity":1,"message":"137","line":89,"column":41,"nodeType":"138","messageId":"139","endLine":89,"endColumn":43},{"ruleId":"136","severity":1,"message":"137","line":109,"column":37,"nodeType":"138","messageId":"139","endLine":109,"endColumn":39},"@typescript-eslint/no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'book' is defined but never used.","'storeType' is defined but never used.","'Hyperlink' is defined but never used.","'Button' is defined but never used.","'BookDetails' is defined but never used.","'props' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["142"],["143"],"'useNavigation' is defined but never used.","'WolnelekturyAPIType' is defined but never used.","'bookPagination' is assigned a value but never used.","'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'authorTitle'. Either include it or remove the dependency array.",["144"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'handleClickFofward' is assigned a value but never used.","'setPageNumberLimit' is assigned a value but never used.","'background' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useMemo has a missing dependency: 'envNumber'. Either include it or remove the dependency array.",["145"],{"desc":"146","fix":"147"},{"desc":"146","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [dispatch]",{"range":"153","text":"154"},{"range":"155","text":"154"},"Update the dependencies array to be: [authorTitle]",{"range":"156","text":"157"},"Update the dependencies array to be: [envNumber]",{"range":"158","text":"159"},[2353,2355],"[dispatch]",[2726,2728],[1158,1160],"[authorTitle]",[2152,2154],"[envNumber]"]