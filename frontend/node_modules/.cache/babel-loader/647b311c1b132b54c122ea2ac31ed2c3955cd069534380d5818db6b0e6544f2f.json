{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\BookServiseTS\\\\src\\\\components\\\\PaginationBooks\\\\index.tsx\";\nimport React from 'react';\nimport { Button } from '../Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PaginationBooks = ({\n  totalBooks,\n  booksPerPage,\n  currentPage,\n  setCurrentPage\n}) => {\n  //\n\n  //const [currentPage, setCurrentPage] = useState(1)\n  let pages = [];\n  for (let i = 1; i <= Math.ceil(totalBooks / booksPerPage) && i < (process.env.REACT_APP_PAGE_COUNT ? parseInt(process.env.REACT_APP_PAGE_COUNT) : 0); i++) {\n    pages.push(i);\n  }\n  //console.log(process.env.REACT_APP_PAGE_COUNT);\n  //console.log(process.env.API_URL);\n  //currentPage = 3;\n\n  // const bgAfterClick = `bg-lime-500`;\n  // const bgBeforeClick = `bg-indigo-600`;\n  let background;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-wrap justify-center items-center  col-span-3 h-14 bg-slate-500\",\n    children: pages.map((page, index) => {\n      currentPage == page ? background = `bg-lime-500` : background = `bg-indigo-600`;\n      return /*#__PURE__*/_jsxDEV(Button, {\n        content: page,\n        background: background,\n        onClick: () => {\n          setCurrentPage(page);\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_c = PaginationBooks;\nvar _c;\n$RefreshReg$(_c, \"PaginationBooks\");","map":{"version":3,"names":["React","Button","jsxDEV","_jsxDEV","PaginationBooks","totalBooks","booksPerPage","currentPage","setCurrentPage","pages","i","Math","ceil","process","env","REACT_APP_PAGE_COUNT","parseInt","push","background","className","children","map","page","index","content","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Documents/GitHub/BookServiseTS/src/components/PaginationBooks/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button } from '../Button';\r\n\r\ninterface props {\r\n    totalBooks: number;\r\n    booksPerPage: number;\r\n    currentPage: number;\r\n    setCurrentPage: (state: number) => void;\r\n}\r\n\r\nexport const PaginationBooks = ({\r\n    totalBooks,\r\n    booksPerPage,\r\n    currentPage,\r\n    setCurrentPage,\r\n}: props) => {\r\n    //\r\n\r\n    //const [currentPage, setCurrentPage] = useState(1)\r\n    let pages = [];\r\n\r\n    for (\r\n        let i = 1;\r\n        i <= Math.ceil(totalBooks / booksPerPage) &&\r\n        i <\r\n            (process.env.REACT_APP_PAGE_COUNT\r\n                ? parseInt(process.env.REACT_APP_PAGE_COUNT)\r\n                : 0);\r\n        i++\r\n    ) {\r\n        pages.push(i);\r\n    }\r\n    //console.log(process.env.REACT_APP_PAGE_COUNT);\r\n    //console.log(process.env.API_URL);\r\n    //currentPage = 3;\r\n\r\n    // const bgAfterClick = `bg-lime-500`;\r\n    // const bgBeforeClick = `bg-indigo-600`;\r\n    let background;\r\n\r\n    return (\r\n        <div className=\"flex flex-wrap justify-center items-center  col-span-3 h-14 bg-slate-500\">\r\n            {pages.map((page, index) => {\r\n                currentPage == page\r\n                    ? (background = `bg-lime-500`)\r\n                    : (background = `bg-indigo-600`);\r\n\r\n                return (\r\n                    <Button\r\n                        key={index}\r\n                        content={page}\r\n                        background={background}\r\n                        onClick={() => {\r\n                            setCurrentPage(page);\r\n                        }}\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAoB,OAAO;AACvC,SAASC,MAAM,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASnC,OAAO,MAAMC,eAAe,GAAGA,CAAC;EAC5BC,UAAU;EACVC,YAAY;EACZC,WAAW;EACXC;AACG,CAAC,KAAK;EACT;;EAEA;EACA,IAAIC,KAAK,GAAG,EAAE;EAEd,KACI,IAAIC,CAAC,GAAG,CAAC,EACTA,CAAC,IAAIC,IAAI,CAACC,IAAI,CAACP,UAAU,GAAGC,YAAY,CAAC,IACzCI,CAAC,IACIG,OAAO,CAACC,GAAG,CAACC,oBAAoB,GAC3BC,QAAQ,CAACH,OAAO,CAACC,GAAG,CAACC,oBAAoB,CAAC,GAC1C,CAAC,CAAC,EACZL,CAAC,EAAE,EACL;IACED,KAAK,CAACQ,IAAI,CAACP,CAAC,CAAC;EACjB;EACA;EACA;EACA;;EAEA;EACA;EACA,IAAIQ,UAAU;EAEd,oBACIf,OAAA;IAAKgB,SAAS,EAAC,0EAA0E;IAAAC,QAAA,EACpFX,KAAK,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MACxBhB,WAAW,IAAIe,IAAI,GACZJ,UAAU,GAAI,aAAY,GAC1BA,UAAU,GAAI,eAAe;MAEpC,oBACIf,OAAA,CAACF,MAAM;QAEHuB,OAAO,EAAEF,IAAK;QACdJ,UAAU,EAAEA,UAAW;QACvBO,OAAO,EAAEA,CAAA,KAAM;UACXjB,cAAc,CAACc,IAAI,CAAC;QACxB;MAAE,GALGC,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMb,CAAC;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACC,EAAA,GAlDW1B,eAAe;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}