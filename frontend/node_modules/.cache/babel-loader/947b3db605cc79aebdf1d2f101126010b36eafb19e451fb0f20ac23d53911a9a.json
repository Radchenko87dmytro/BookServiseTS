{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\BookServiseTS\\\\src\\\\index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport reportWebVitals from './reportWebVitals';\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport { Root } from './routes';\nimport { Books } from './screens/Books';\nimport { Book } from './screens/Book';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mock = [{\n  id: 1,\n  name: 'book1'\n}, {\n  id: 2,\n  name: 'book2'\n}, {\n  id: 3,\n  name: 'book3'\n}, {\n  id: 4,\n  name: 'book4'\n}, {\n  id: 5,\n  name: 'book5'\n}];\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 18\n  }, this)\n}, {\n  path: '/books',\n  element: /*#__PURE__*/_jsxDEV(Books, {\n    books: mock\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 18\n  }, this)\n}, {\n  path: '/book/:id',\n  element: /*#__PURE__*/_jsxDEV(Book, {\n    books: mock\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 18\n  }, this)\n}\n// {\n//     path: '/book/:id',\n//     element: <Hyperlink></Hyperlink> />,\n// },\n]);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 43,\n  columnNumber: 5\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","reportWebVitals","createBrowserRouter","RouterProvider","Root","Books","Book","jsxDEV","_jsxDEV","mock","id","name","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","books","root","createRoot","document","getElementById","render","StrictMode","children"],"sources":["D:/Documents/GitHub/BookServiseTS/src/index.tsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport reportWebVitals from './reportWebVitals';\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport { Root } from './routes';\nimport { Books } from './screens/Books';\nimport { Book } from './screens/Book';\nimport { book } from './types';\nimport './index.css';\nimport { Hyperlink } from './components/Hyperlink/hyperlink';\n\nconst mock: book[] = [\n    { id: 1, name: 'book1' },\n    { id: 2, name: 'book2' },\n    { id: 3, name: 'book3' },\n    { id: 4, name: 'book4' },\n    { id: 5, name: 'book5' },\n];\n\nconst router = createBrowserRouter([\n    {\n        path: '/',\n        element: <Root />,\n    },\n    {\n        path: '/books',\n        element: <Books books={mock} />,\n    },\n    {\n        path: '/book/:id',\n        element: <Book books={mock} />,\n    },\n    // {\n    //     path: '/book/:id',\n    //     element: <Hyperlink></Hyperlink> />,\n    // },\n]);\n\nconst root = ReactDOM.createRoot(\n    document.getElementById('root') as HTMLElement\n);\nroot.render(\n    <React.StrictMode>\n        <RouterProvider router={router} />\n    </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,SAASC,IAAI,QAAQ,UAAU;AAC/B,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,IAAI,QAAQ,gBAAgB;AAErC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrB,MAAMC,IAAY,GAAG,CACjB;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAQ,CAAC,EACxB;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAQ,CAAC,EACxB;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAQ,CAAC,EACxB;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAQ,CAAC,EACxB;EAAED,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAQ,CAAC,CAC3B;AAED,MAAMC,MAAM,GAAGV,mBAAmB,CAAC,CAC/B;EACIW,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEN,OAAA,CAACJ,IAAI;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AACpB,CAAC,EACD;EACIL,IAAI,EAAE,QAAQ;EACdC,OAAO,eAAEN,OAAA,CAACH,KAAK;IAACc,KAAK,EAAEV;EAAK;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAClC,CAAC,EACD;EACIL,IAAI,EAAE,WAAW;EACjBC,OAAO,eAAEN,OAAA,CAACF,IAAI;IAACa,KAAK,EAAEV;EAAK;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AACjC;AACA;AACA;AACA;AACA;AAAA,CACH,CAAC;;AAEF,MAAME,IAAI,GAAGpB,QAAQ,CAACqB,UAAU,CAC5BC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAClC,CAAC;AACDH,IAAI,CAACI,MAAM,eACPhB,OAAA,CAACT,KAAK,CAAC0B,UAAU;EAAAC,QAAA,eACblB,OAAA,CAACL,cAAc;IAACS,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACpB,CACtB,CAAC;;AAED;AACA;AACA;AACAjB,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}