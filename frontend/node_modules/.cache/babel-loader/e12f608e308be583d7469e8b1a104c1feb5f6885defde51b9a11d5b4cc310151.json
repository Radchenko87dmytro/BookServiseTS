{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\BookServiseTS\\\\src\\\\index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport reportWebVitals from './reportWebVitals';\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport { Root } from './routes';\nimport { Books } from './screens/Books';\nimport './index.css';\nimport { BookDetails } from './screens/BookDetails';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\nimport { Login } from './screens/Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 18\n  }, this)\n}, {\n  path: '/books',\n  element: /*#__PURE__*/_jsxDEV(Books, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 18\n  }, this) //bookHandler={bookHandler}\n}, {\n  path: '/book/:authorTitle',\n  //'/book/:id/:page'\n  element: /*#__PURE__*/_jsxDEV(BookDetails, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 18\n  }, this)\n}, {\n  path: '/login',\n  element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 18\n  }, this)\n}]);\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 5\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","reportWebVitals","createBrowserRouter","RouterProvider","Root","Books","BookDetails","store","Provider","Login","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","root","createRoot","document","getElementById","render","StrictMode","children"],"sources":["D:/Documents/GitHub/BookServiseTS/src/index.tsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport reportWebVitals from './reportWebVitals';\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport { Root } from './routes';\nimport { Books } from './screens/Books';\nimport './index.css';\nimport { BookDetails } from './screens/BookDetails';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\nimport { Login } from './screens/Login';\n\nconst router = createBrowserRouter([\n    {\n        path: '/',\n        element: <Root />,\n    },\n    {\n        path: '/books',\n        element: <Books />, //bookHandler={bookHandler}\n    },\n    {\n        path: '/book/:authorTitle', //'/book/:id/:page'\n        element: <BookDetails />,\n    },\n    {\n        path: '/login',\n        element: <Login />,\n    },\n]);\n\nconst root = ReactDOM.createRoot(\n    document.getElementById('root') as HTMLElement\n);\nroot.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <RouterProvider router={router} />\n        </Provider>\n    </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,SAASC,IAAI,QAAQ,UAAU;AAC/B,SAASC,KAAK,QAAQ,iBAAiB;AACvC,OAAO,aAAa;AACpB,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,KAAK,QAAQ,SAAS;AAC/B,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGV,mBAAmB,CAAC,CAC/B;EACIW,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACP,IAAI;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AACpB,CAAC,EACD;EACIL,IAAI,EAAE,QAAQ;EACdC,OAAO,eAAEH,OAAA,CAACN,KAAK;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAE;AACxB,CAAC,EACD;EACIL,IAAI,EAAE,oBAAoB;EAAE;EAC5BC,OAAO,eAAEH,OAAA,CAACL,WAAW;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAC3B,CAAC,EACD;EACIL,IAAI,EAAE,QAAQ;EACdC,OAAO,eAAEH,OAAA,CAACF,KAAK;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AACrB,CAAC,CACJ,CAAC;AAEF,MAAMC,IAAI,GAAGnB,QAAQ,CAACoB,UAAU,CAC5BC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAClC,CAAC;AACDH,IAAI,CAACI,MAAM,eACPZ,OAAA,CAACZ,KAAK,CAACyB,UAAU;EAAAC,QAAA,eACbd,OAAA,CAACH,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAkB,QAAA,eACnBd,OAAA,CAACR,cAAc;MAACS,MAAM,EAAEA;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACG,CACtB,CAAC;;AAED;AACA;AACA;AACAjB,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}